scale_y_continuous(labels = scales::comma) +
#labs(x = "Month", y = "Exports", ggtitle = "Saudi Arabia Exports") +
ggtitle("Saudi Arabia Exports") +
theme(plot.title = element_text(hjust = 0.5))
ggseasonplot(tsExp, col = rainbow(12), year.labels = TRUE, year.labels.left = TRUE) +
scale_y_continuous(labels = scales::comma) +
labs(x = "Month", y = "Exports") +
ggtitle("Saudi Arabia Exports") +
theme(plot.title = element_text(hjust = 0.5))
ggseasonplot(tsExp, year.labels = TRUE, year.labels.left = TRUE) +
scale_y_continuous(labels = scales::comma) +
labs(x = "Month", y = "Exports") +
ggtitle("Saudi Arabia Exports") +
theme(plot.title = element_text(hjust = 0.5))
?scale_y_continuous
ggseasonplot(tsExp, year.labels = TRUE, year.labels.left = TRUE) +
scale_y_continuous(labels = scales::comma, sec.axis = sec.axis) +
labs(x = "Month", y = "Exports") +
ggtitle("Saudi Arabia Exports") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_tq()
ggseasonplot(tsExp, year.labels = TRUE, year.labels.left = TRUE) +
scale_y_continuous(labels = scales::comma, sec.axis = dup_axis()) +
labs(x = "Month", y = "Exports") +
ggtitle("Saudi Arabia Exports") +
theme(plot.title = element_text(hjust = 0.5)) +
theme_tq()
ggseasonplot(tsExp, year.labels = TRUE, year.labels.left = TRUE) +
scale_y_continuous(labels = scales::comma, sec.axis = dup_axis()) +
theme_tq() +
labs(x = "Month", y = "Exports") +
ggtitle("Saudi Arabia Exports") +
theme(plot.title = element_text(hjust = 0.5))
forecast::ggseasonplot(tsExp, year.labels = TRUE, year.labels.left = TRUE) +
scale_y_continuous(labels = scales::comma, sec.axis = dup_axis()) +
theme_tq() +
labs(x = "Month", y = "Exports") +
ggtitle("Saudi Arabia Exports") +
theme(plot.title = element_text(hjust = 0.5))
?ggseasonplot
forecast::ggseasonplot(x = tsExp, year.labels = TRUE, year.labels.left = TRUE) +
scale_y_continuous(labels = scales::comma, sec.axis = dup_axis()) +
theme_tq() +
labs(x = "Month", y = "Exports") +
ggtitle("Saudi Arabia Exports") +
theme(plot.title = element_text(hjust = 0.5))
Plot1 <-
forecast::ggseasonplot(x = tsExp, year.labels = TRUE, year.labels.left = TRUE) +
scale_y_continuous(labels = scales::comma, sec.axis = dup_axis()) +
theme_tq() +
labs(x = "Month", y = "Exports") +
ggtitle("Saudi Arabia Exports") +
theme(plot.title = element_text(hjust = 0.5))
print(Plot1)
Plot2 <-
forecast::ggseasonplot(x = tsImp, year.labels = TRUE, year.labels.left = TRUE) +
scale_y_continuous(labels = scales::comma, sec.axis = dup_axis()) +
theme_tq() +
labs(x = "Month", y = "Imports") +
ggtitle("Saudi Arabia Imports") +
theme(plot.title = element_text(hjust = 0.5))
print(Plot2)
df1 %>%
dplyr::mutate(
Year  = lubridate::year(Date)
, Month = lubridate::month(Date, label = TRUE)
)
df2 <-
df1 %>%
dplyr::mutate(
Year  = lubridate::year(Date)
, Month = lubridate::month(Date, label = TRUE)
)
forecast::ggseasonplot(x = tsImp, year.labels = TRUE, year.labels.left = TRUE) +
scale_y_continuous(labels = scales::comma, sec.axis = dup_axis()) +
theme_tq() +
labs(x = "Month", y = "Imports", title = "Saudi Arabia Imports") +
#ggtitle("Saudi Arabia Imports") +
theme(plot.title = element_text(hjust = 0.5))
forecast::ggseasonplot(x = tsExp, year.labels = TRUE, year.labels.left = TRUE) +
scale_y_continuous(labels = scales::comma, sec.axis = dup_axis()) +
theme_tq() +
labs(x = "Month", y = "Exports", title = "Saudi Arabia Exports") +
theme(plot.title = element_text(hjust = 0.5))
forecast::ggseasonplot(x = tsImp, year.labels = TRUE, year.labels.left = TRUE) +
scale_y_continuous(labels = scales::comma, sec.axis = dup_axis()) +
theme_tq() +
labs(x = "Month", y = "Imports", title = "Saudi Arabia Imports") +
theme(plot.title = element_text(hjust = 0.5))
library(forecast)
library(tidyquant)
library(timetk)
library(sweep)
library(lubridate)
df2 <-
df1 %>%
dplyr::mutate(
Year  = lubridate::year(Date)
, Month = lubridate::month(Date, label = TRUE)
)
df2 %>%
ggplot(aes(x = Month, y = Exports, group = Year)) +
geom_area(aes(fill = Year), position = "stack") +
scale_y_continuous(labels = scales::comma, sec.axis = dup_axis()) +
labs(x = "Month", y = "Imports", title = "Saudi Arabia Imports") +
theme(plot.title = element_text(hjust = 0.5))  +
theme_tq()
ggplot(data = df2, mapping  = aes(x = Month, y = Exports, group = Year)) +
geom_area(aes(fill = Year), position = "stack") +
scale_y_continuous(labels = scales::comma, sec.axis = dup_axis()) +
theme_tq() +
labs(x = "Month", y = "Imports", title = "Saudi Arabia Imports") +
theme(plot.title = element_text(hjust = 0.5))
df2
df1
?spread
spread
library(dplyr)
stocks <- data.frame(
time = as.Date('2009-01-01') + 0:9,
X = rnorm(10, 0, 1),
Y = rnorm(10, 0, 2),
Z = rnorm(10, 0, 4)
)
stocksm <- stocks %>% gather(stock, price, -time)
stocksm %>% spread(stock, price)
?gather
df2 %>%
tidyr::gather(key = "Trade", value = "value", -Date)
df3 <-
df2 %>%
tidyr::gather(key = "Trade", value = "Value", -Date)
df3
df2 %>%
tidyr::gather(key = "Trade", value = "Value", -Date) %>%
group_by(Trade) %>%
nest(.key = "data.tbl")
df2 %>%
tidyr::gather(key = "Trade", value = "Value", -Date)
df3 <-
df2 %>%
tidyr::gather(key = "Trade", value = "Value", -Date) %>%
df3 %>%
group_by(Trade) %>%
nest(.key = "data.tbl")
df3 <-
df2 %>%
tidyr::gather(key = "Trade", value = "Value", -Date) %>%
df3
df1 <- readxl::read_excel("Dr._M._Kashif_2018-04-29_Data.xlsx", col_names = TRUE, skip = 1)
df2 <-
df1 %>%
dplyr::mutate(
Year  = lubridate::year(Date)
, Month = lubridate::month(Date, label = TRUE)
)
df2
df1 %>%
tidyr::gather(key = "Trade", value = "Value", -Date) %>%
)
df1 %>%
tidyr::gather(key = "Trade", value = "Value", -Date)
df1 %>%
tidyr::gather(key = "Trade", value = "Value", -Date) %>%
group_by(Trade) %>%
nest(.key = "data.tbl")
df3 <-
df1 %>%
tidyr::gather(key = "Trade", value = "Value", -Date) %>%
group_by(Trade) %>%
nest(.key = "datsa.tbl")
df3
unnest(df3)
df3 %>%
dplyr::mutate(data.ts = purrr::map(
.x        = data.tbl
, .f        = tk_ts
, select    = -Date
, start     = c(2003, 7)
, end       = c(2018, 03)
, frequency = 12
)
)
df3 <-
df1 %>%
tidyr::gather(key = "Trade", value = "Value", -Date) %>%
group_by(Trade) %>%
nest(.key = "data.tbl")
df3
df3 %>%
dplyr::mutate(data.ts = purrr::map(
.x        = data.tbl
, .f        = tk_ts
, select    = -Date
, start     = c(2003, 7)
, end       = c(2018, 03)
, frequency = 12
)
)
df4 <-
df3 %>%
dplyr::mutate(data.ts = purrr::map(
.x        = data.tbl
, .f        = tk_ts
, select    = -Date
, start     = c(2003, 7)
, end       = c(2018, 03)
, frequency = 12
)
)
df4
df4 %>%
dplyr::mutate(fit.ets = map(data.ts, ets))
df5 <-
df4 %>%
dplyr::mutate(fit.ets = map(data.ts, ets))
df5
df5 %>%
dplyr::mutate(tidy = purrr::map(fit.ets, sw_tidy))
df5 %>%
dplyr::mutate(tidy = purrr::map(fit.ets, sw_tidy)) %>%
dplyr::unnest(tidy, .drop = TRUE)
df5 %>%
dplyr::mutate(tidy = purrr::map(fit.ets, sw_tidy)) %>%
tidyr::unnest(tidy, .drop = TRUE)
df5 %>%
dplyr::mutate(tidy = purrr::map(fit.ets, sw_tidy)) %>%
tidyr::unnest(tidy, .drop = TRUE) %>%
spread(key = Date, value = estimate)
df5 %>%
dplyr::mutate(tidy = purrr::map(fit.ets, sw_tidy)) %>%
tidyr::unnest(tidy, .drop = TRUE)
df5 %>%
dplyr::mutate(tidy = purrr::map(fit.ets, sw_tidy)) %>%
tidyr::unnest(tidy, .drop = TRUE) %>%
spread(key = category.secondary, value = estimate)
df5 %>%
dplyr::mutate(tidy = purrr::map(fit.ets, sw_tidy)) %>%
tidyr::unnest(tidy, .drop = TRUE) %>%
spread(key = Trade, value = estimate)
df5 %>%
dplyr::mutate(glance = map(fit.ets, sw_glance)) %>%
tidyr::unnest(glance, .drop = TRUE)
df5 %>%
dplyr::mutate(augment = map(fit.ets, sw_augment, timetk_idx = TRUE, rename_index = "Date"))
df5 %>%
dplyr::mutate(augment = map(
fit.ets
, sw_augment
, timetk_idx = TRUE
, rename_index = "Date"
)) %>%
tidyr::unnest(augment, .drop = TRUE)
df8 <-
df5 %>%
dplyr::mutate(augment = map(
fit.ets
, sw_augment
, timetk_idx = TRUE
, rename_index = "Date"
)) %>%
tidyr::unnest(augment, .drop = TRUE)
df8
df8 %>%
ggplot(aes(x = Date, y = .resid, group = Trade)) +
geom_hline(yintercept = 0, color = "grey40") +
geom_line(color = palette_light()[[2]]) +
geom_smooth(method = "loess") +
labs(title = "Bike Quantity Sold By Secondary Category",
subtitle = "ETS Model Residuals", x = "") +
theme_tq() +
facet_wrap(~ Trade, scale = "free_y", ncol = 3) +
scale_x_date(date_labels = "%Y")
df8 %>%
ggplot(aes(x = Date, y = .resid, group = Trade)) +
geom_hline(yintercept = 0, color = "grey40") +
geom_line(color = palette_light()[[2]])
df8 %>%
ggplot(aes(x = Date, y = .resid, group = Trade)) +
geom_hline(yintercept = 0, color = "grey40") +
geom_line(color = palette_light()[[2]]) +
geom_smooth(method = "loess")
df8 %>%
ggplot(aes(x = Date, y = .resid, group = Trade)) +
geom_hline(yintercept = 0, color = "grey40") +
geom_line(color = palette_light()[[2]]) +
geom_smooth(method = "loess") +
labs(title = "Bike Quantity Sold By Secondary Category",
subtitle = "ETS Model Residuals", x = "") +
theme_tq()
df8 %>%
ggplot(aes(x = Date, y = .resid, group = Trade)) +
geom_hline(yintercept = 0, color = "grey40") +
geom_line(color = palette_light()[[2]]) +
geom_smooth(method = "loess") +
labs(title = "Bike Quantity Sold By Secondary Category",
subtitle = "ETS Model Residuals", x = "") +
theme_tq() +
facet_wrap(~ Trade, scale = "free_y", ncol = 3)
df8 %>%
ggplot(aes(x = Date, y = .resid, group = Trade)) +
geom_hline(yintercept = 0, color = "grey40") +
geom_line(color = palette_light()[[2]]) +
geom_smooth(method = "loess") +
labs(title = "Bike Quantity Sold By Secondary Category",
subtitle = "ETS Model Residuals", x = "") +
theme_tq() +
facet_wrap(~ Trade, scale = "free_y", ncol = 3) +
scale_x_date(date_labels = "%Y")
df8 %>%
ggplot(aes(x = Date, y = .resid, group = Trade)) +
geom_hline(yintercept = 0, color = "grey40") +
geom_line(color = palette_light()[[2]]) +
geom_smooth(method = "loess") +
labs(title = "Bike Quantity Sold By Secondary Category",
subtitle = "ETS Model Residuals", x = "") +
theme_tq() +
facet_wrap(~ Trade, scale = "free_y", ncol = 3)
df8 %>%
ggplot(aes(x = Date, y = .resid, group = Trade)) +
geom_hline(yintercept = 0, color = "grey40") +
geom_line(color = palette_light()[[2]]) +
geom_smooth(method = "loess") +
scale_y_continuous(labels = scales::comma, sec.axis = dup_axis()) +
facet_wrap(~ Trade, scale = "free_y", ncol = 3) +
theme_tq() +
labs(x = "Year", y = "Residuals", title = "Saudi Arabia Imports and Exports") +
theme(plot.title = element_text(hjust = 0.5))
df8 %>%
ggplot(aes(x = Date, y = .resid, group = Trade)) +
geom_hline(yintercept = 0, color = "grey40") +
geom_line(color = palette_light()[[2]]) +
geom_smooth(method = "loess") +
scale_y_continuous(labels = scales::comma, sec.axis = dup_axis()) +
facet_wrap(~ Trade, scale = "free_y", ncol = 2) +
theme_tq() +
labs(x = "Year", y = "Residuals", title = "Saudi Arabia Exports and Imports") +
theme(plot.title = element_text(hjust = 0.5))
library(magrittr)
ggplot(data = df2, mapping  = aes(x = Month, y = Exports, group = Year)) +
geom_area(aes(fill = Year), position = "stack") +
scale_y_continuous(labels = scales::comma, sec.axis = dup_axis()) +
theme_tq() +
labs(x = "Month", y = "Imports", title = "Saudi Arabia Imports") +
theme(plot.title = element_text(hjust = 0.5))
?sweep
library(help =sweep)
?sw_tidy
df5 %>%
dplyr::mutate(decomp = map(
fit.ets
, sw_tidy_decomp
, timetk_idx    = TRUE
, rename_index  = "Date"
)) %>%
tidyr::unnest(decomp)
df9 <-
df5 %>%
dplyr::mutate(fcast.ets = map(fit.ets, forecast, h = 12))
df9
df9
df10 <-
df9 %>%
dplyr::mutate(sweep = map(
fcast.ets
, sw_sweep
, fitted = FALSE
, timetk_idx = TRUE
)) %>%
tidyr::unnest(sweep)
df10
df10 %>%
ggplot(aes(x = index, y = Value, color = key, group = Trade))
df10 %>%
ggplot(aes(x = index, y = Value, color = key, group = Trade)) +
geom_ribbon(aes(ymin = lo.95, ymax = hi.95),
fill = "#D5DBFF", color = NA, size = 0) +
geom_ribbon(aes(ymin = lo.80, ymax = hi.80, fill = key),
fill = "#596DD5", color = NA, size = 0, alpha = 0.8) +
geom_line() +
labs(title = "Bike Quantity Sold By Secondary Category",
subtitle = "ETS Model Forecasts",
x = "", y = "Units") +
scale_x_date(date_breaks = "1 year", date_labels = "%Y") +
scale_color_tq() +
scale_fill_tq() +
facet_wrap(~ Trade, scales = "free_y", ncol = 3) +
theme_tq() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
df10 %>%
ggplot(aes(x = index, y = Value, color = key, group = Trade)) +
geom_ribbon(aes(ymin = lo.95, ymax = hi.95),
fill = "#D5DBFF", color = NA, size = 0) +
geom_ribbon(aes(ymin = lo.80, ymax = hi.80, fill = key),
fill = "#596DD5", color = NA, size = 0, alpha = 0.8) +
geom_line() +
scale_y_continuous(labels = scales::comma, sec.axis = dup_axis()) +
facet_wrap(~ Trade, scale = "free_y", ncol = 2) +
theme_tq() +
labs(x = "Year", y = "Residuals", title = "Saudi Arabia Exports and Imports") +
theme(plot.title = element_text(hjust = 0.5))
df10 %>%
ggplot(aes(x = index, y = Value, color = key, group = Trade)) +
geom_ribbon(aes(ymin = lo.95, ymax = hi.95),
fill = "#D5DBFF", color = NA, size = 0) +
geom_ribbon(aes(ymin = lo.80, ymax = hi.80, fill = key),
fill = "#596DD5", color = NA, size = 0, alpha = 0.8) +
geom_line() +
scale_y_continuous(labels = scales::comma, sec.axis = dup_axis()) +
facet_wrap(~ Trade, scale = "free_y", ncol = 2) +
scale_color_tq() +
scale_fill_tq() +
theme_tq() +
labs(x = "Year", y = "Residuals", title = "Saudi Arabia Exports and Imports") +
theme(plot.title = element_text(hjust = 0.5))
Plot5 <-
df10 %>%
ggplot(aes(x = index, y = Value, color = key, group = Trade)) +
geom_ribbon(aes(ymin = lo.95, ymax = hi.95),
fill = "#D5DBFF", color = NA, size = 0) +
geom_ribbon(aes(ymin = lo.80, ymax = hi.80, fill = key),
fill = "#596DD5", color = NA, size = 0, alpha = 0.8) +
geom_line() +
scale_y_continuous(labels = scales::comma, sec.axis = dup_axis()) +
facet_wrap(~ Trade, scale = "free_y", ncol = 2) +
scale_color_tq() +
scale_fill_tq() +
theme_tq() +
labs(x = "Year", y = "Residuals", title = "Saudi Arabia Exports and Imports") +
theme(plot.title = element_text(hjust = 0.5))
print(Plot5)
# rm(list = ls())
setwd("/media/myaseen/Documents/MYaseen208/Consultancy_at_UAF/Mr._M._Yaseen/2018-04-20_Website/MYaseen208")
getwd()
library(blogdown)
# Removing public directory
unlink(x = "public", recursive = TRUE, force = FALSE)
blogdown::serve_site()
# Removing public directory
unlink(x = "public", recursive = TRUE, force = FALSE)
blogdown::serve_site()
# Removing public directory
unlink(x = "public", recursive = TRUE, force = FALSE)
blogdown::serve_site()
df1
df1 %>%
tk_ts(select = Exports, start = c(2003, 7), end = c(2018, 03), frequency = 12)
models_list <- list(
auto.arima = list(
y = tsExp
),
ets = list(
y = tsExp
, damped = TRUE
),
bats = list(
y = tsExp
)
)
models_tbl <- enframe(models_list, name = "f", value = "params")
models_tbl
models_tbl_fit <- models_tbl %>%
mutate(fit = invoke_map(f, params))
models_tbl_fit
models_tbl
models_tbl %>%
mutate(fit = invoke_map(f, params))
models_tbl_fit <-
models_tbl %>%
mutate(fit = invoke_map(f, params))
models_tbl_fit
models_tbl_fit %>%
mutate(tidy = map(fit, sw_tidy)) %>%
unnest(tidy) %>%
spread(key = f, value = estimate)
models_tbl_fit %>%
mutate(glance = map(fit, sw_glance)) %>%
unnest(glance, .drop = TRUE)
models_tbl_fit %>%
mutate(augment = map(fit, sw_augment, rename_index = "date")) %>%
unnest(augment) %>%
ggplot(aes(x = date, y = .resid, group = f)) +
geom_line(color = palette_light()[[2]]) +
geom_point(color = palette_light()[[1]]) +
geom_smooth(method = "loess") +
facet_wrap(~ f, nrow = 3) +
labs(title = "Residuals Plot") +
theme_tq()
models_tbl_fcast <- models_tbl_fit %>%
mutate(fcast = map(fit, forecast, h = 6))
models_tbl_fcast
models_tbl_fcast_tidy <- models_tbl_fcast %>%
mutate(sweep = map(fcast, sw_sweep, fitted = FALSE, timetk_idx = TRUE, rename_index = "date"))
models_tbl_fcast_tidy
models_tbl_fcast_tidy %>%
unnest(sweep)
models_tbl_fcast_tidy %>%
unnest(sweep) %>%
ggplot(aes(x = date, y = price, color = key, group = f)) +
geom_ribbon(aes(ymin = lo.95, ymax = hi.95),
fill = "#D5DBFF", color = NA, size = 0) +
geom_ribbon(aes(ymin = lo.80, ymax = hi.80, fill = key),
fill = "#596DD5", color = NA, size = 0, alpha = 0.8) +
geom_line(size = 1) +
facet_wrap(~f, nrow = 3) +
labs(title = "Gasoline Price Forecasts",
subtitle = "Forecasting multiple models with sweep: ARIMA, BATS, ETS",
x = "", y = "Price") +
scale_y_continuous(labels = scales::dollar) +
scale_x_date(date_breaks = "5 years", date_labels = "%Y") +
theme_tq() +
scale_color_tq()
